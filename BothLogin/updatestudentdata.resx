<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAASQSURBVHhe7Zg9bxxVFIY3Ansd4giEAgilDX8A/gCBjgoIHRF1UlEilBQBmpS01FBRGkQkGksk
        JA2GoCj2rgChhIKCIv5KvHYUhvc9fu/u7Oy9d3dnxsOsPY905Dkf98w5d+/HrlsNDQ0NDf8Dc2t7r7U7
        vV8ofJb5CLCcPD3f2f0Ije9CEsnjhU7vauunZE5Rh5P2au+V+e7uLTX9L+RzCZ8T8yFG4YeLhe7OB2hy
        i41C/m53e2/JRd+bsN2X7xHkw1aSHJN7tjlxZ/slNLSk5hIs9a9bd5Pn5R7wR/IsJuULF4fn7493H52W
        dzbBXn8Pzfyjph4sdHbOyxUkz5j68Wfy3Hxn5ys1QfnumdWHL8trzK3uvdpe6/1M4bPMBmM5xo1nLuaU
        u96M3c9J8tSkt0Ds3KgffyXHUWT0RG/f7Z1B8zfV0OgtQB9iFG74bg6+S+76kCpyD41c5n0vFz/1Y7Bf
        gGwr5j5XirzZVcOYC0OrZv+7w2XY9xjDiZKnPqj4JPd+nvTckF+m+uArbH5t9xxshW4BTMr7chmy13wC
        cKejkS+dDXLNfZqLv2+9iIn4DDb+DuBy3+ZNQNvib1svMEar5hrExjMXc9LnbHyuFa4wNPIG/t6TzgYv
        uv2sT3dTPp9sYNW8awn3z42LEHdu3FNui7WYOuEKg9iJbpK6BdS88y0trO283vo1OUFBY2dxxX0j35P+
        JADmkH0ot9z1IVWkndTpIrnsodsnj+Y+lnkETNIljV1324HI5s1dG1DUMuS2fucPFak9T9uSTAYa/hG2
        G1INtxKwQj6RqT8Bqf8hLMtVT1zBUqnfpm7LPkU2jvT3OQ5GmbxxtSZbMJ5t+eNX4KJMhouT7K+ETnJS
        +qbpwMVIrT/ZgtmM6aMTcN3FQn4w42ACNkwHLkZq/ckWjGfuW16RZ2UKkrrqVmSa/QlAU5+aDQecTEGw
        979lLM6LKzLN/gTwSoO+QRuvOplHgI8/eDh2/WR385TM1UyAriR7UVmi1Aa/3MD2xHxYCVzqdiZAbNnr
        k2cMflm+rWGG7GXK0NVreIIKi1L30SSsZ+NSso7m31F4H09cYVHqAUFHDmK5uLT5JQf+FQj/28MbYoW2
        9LJPw1wUqYUI5ir5Jbze9q+1Eii5tsknIHMuXJfZiPl8jIuP+Z1dqpG3NmeXOsDn4GBnhwx9ojGfj3Hx
        Mb+zSzWg56rN2aUOCDpyoE9g9KTNSZm1BXNV8pKcVFKbz1HmPovFkzLzTZvL8Dk42NkhhfYZ9GA8ifmd
        XaoBvbTajKAjB2XmIpXUVslLclJJbT5HmfssFk/KzDdtLsPn4GBnhxTaZ9CD8STmd3apBvTSajOCjhyU
        mYtUUlslL8lJJbX5HGXts0zspNL/JulsUo2ZOgNScVOJhh9obX2Cjhxkc02bu+j4GMFcB/mSaXMXHR8j
        mMvnKGufZfVxTDJ+Js8AqWOZZDz05gzIQzDXQb5k2txFx8cI5vI5mjMgvpeaMyBENte0uYuOjxHMdZAv
        mTZ30fExgrmc46iI2h4A441s0CGWoYOxoaGhoeFo0mr9ByNrkeCmqjguAAAAAElFTkSuQmCC
</value>
  </data>
</root>